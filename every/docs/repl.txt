
{{alias}}( x[, options] )
    Tests whether every element along one or more ndarray dimensions is truthy.

    Parameters
    ----------
    x: ndarray
        Input ndarray.

    options: Object (optional)
        Function options.

    options.dims: Array<integer> (optional)
        List of dimensions over which to perform a reduction. If not provided,
        the function performs a reduction over all elements in a provided input
        ndarray.

    options.keepdims: boolean (optional)
        Boolean indicating whether the reduced dimensions should be included in
        the returned ndarray as singleton dimensions. Default: false.

    Returns
    -------
    out: ndarray
        Output ndarray. When performing a reduction over all elements, the
        function returns a zero-dimensional ndarray containing the result.

    Examples
    --------
    > var x = {{alias:@stdlib/ndarray/array}}( [ [ 1.0, 1.0 ], [ 1.0, 1.0 ] ] );
    > var y = {{alias}}( x )
    <ndarray>
    > y.get()
    true
    > y = {{alias}}( x, { 'keepdims': true } )
    <ndarray>
    > {{alias:@stdlib/ndarray/to-array}}( y )
    [ [ true ] ]
    > y.get( 0, 0 )
    true


{{alias}}.assign( x, y[, options] )
    Tests whether every element along one or more ndarray dimensions is truthy
    and assigns the results to a provided output ndarray.

    Parameters
    ----------
    x: ndarray
        Input ndarray.

    y: ndarray
        Output ndarray. The output shape must match the shape of the non-reduced
        dimensions of the input ndarray.

    options: Object (optional)
        Function options.

    options.dims: Array<integer> (optional)
        List of dimensions over which to perform a reduction. If not provided,
        the function performs a reduction over all elements in a provided input
        ndarray.

    Returns
    -------
    y: ndarray
        Output ndarray.

    Examples
    --------
    > var x = {{alias:@stdlib/ndarray/array}}( [ [ 1.0, 1.0 ], [ 1.0, 1.0 ] ] );
    > var y = {{alias:@stdlib/ndarray/from-scalar}}( false );
    > var out = {{alias}}.assign( x, y )
    <ndarray>
    > var bool = ( out === y )
    true
    > y.get()
    true

    See Also
    --------

