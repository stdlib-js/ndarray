
{{alias}}( table, idtypes, odtypes[, options] )
    Returns an ndarray function interface for applying a strided function to an
    ndarray.

    Parameters
    ----------
    table: Object
        Dispatch table containing strided functions. The table object must have
        the following property:

        - default: default strided function to invoke when provided ndarrays
        have data types which do not have a corresponding specialized
        implementation.

        The table may having the following additional properties:

        - types: one-dimensional list of ndarray data types describing
        specialized output ndarray argument signatures.
        - fcns: list of strided functions which are specific to specialized
        output ndarray argument signatures.

        A strided function should have the following signature:

            f( arrays )

        where

        - arrays: array containing an output ndarray, followed by any additional
        ndarray arguments.

    idtypes: Array<Array<string>>
        List containing lists of supported input array data types for each input
        ndarray argument.

    odtypes: Array<string>
        List of supported output array data types.

    options: Object (optional)
        Function options.

    options.strictTraversalOrder: boolean (optional)
        Boolean specifying whether the order of element traversal must match the
        memory layout order of an output ndarray.

    Returns
    -------
    out: Object
        Instance having methods for applying a strided function.

    Examples
    --------
    > var dts = [ 'float64', 'float32', 'generic' ];
    > var t = { 'default': {{alias:@stdlib/blas/ext/base/ndarray/gsorthp}} };
    > var out = new {{alias}}( t, [ dts ], dts );


{{alias}}.prototype.assign( out[, ...args][, options] )
    Applies a strided function and assigns results to a provided output ndarray.

    Parameters
    ----------
    out: ndarray
        Output array.

    args: ...ndarray (optional)
        Additional ndarray arguments.

    options: Object (optional)
        Function options.

    options.dims: Array<integer> (optional)
        List of dimensions over which to perform operation. If not provided, the
        function performs the operation over all elements in a provided output
        ndarray.

    Returns
    -------
    out: ndarray
        Output array.

    Examples
    --------
    > var dts = [ 'float64', 'float32', 'generic' ];
    > var t = { 'default': {{alias:@stdlib/blas/ext/base/ndarray/gsorthp}} };
    > var f = new {{alias}}( t, [ dts ], dts );
    > var buf = [ -1.0, 2.0, -3.0, -4.0 ];
    > var dt = 'generic';
    > var sh = [ buf.length ];
    > var sx = [ 1 ];
    > var ox = 0;
    > var ord = 'row-major';
    > var x = new {{alias:@stdlib/ndarray/ctor}}( dt, buf, sh, sx, ox, ord );
    > var o = {{alias:@stdlib/ndarray/from-scalar}}( 1.0 );
    > var out = f.assign( x, o )
    <ndarray>
    > var bool = ( out === x )
    true
    > {{alias:@stdlib/ndarray/to-array}}( x )
    [ -4.0, -3.0, -1.0, 2.0 ]

    See Also
    --------
